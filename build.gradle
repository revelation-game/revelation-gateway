plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'idea'

    // Handle integrationTest
    id "com.coditory.integration-test" version "1.1.11"
    id 'jacoco'

    // For test & quality control
    id "org.sonarqube" version "3.1.1"

}

group = 'io.github.revelation-game'
sourceCompatibility = '15'
// Load version from file
def buildProperties = new Properties()
file("version.properties").withInputStream { stream ->
    buildProperties.load(stream)
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.1")
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.5.5'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // For Constructor, Getter and Setter annotations
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // For auto completion on properties
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Test Dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock'

    // Test annotations
    testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

// IntegrationTest plugin
jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
    
    testLogging {
        events "passed", "skipped", "failed", "standardError" //, "standardOut"
    }
    finalizedBy jacocoTestReport // report is always generated after tests run
}


// --- Setup Sonar ---
sonarqube {
    properties {
        property "sonar.projectKey", "revelation-game_revelation-gateway"
        property "sonar.organization", "revelation-game"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}
